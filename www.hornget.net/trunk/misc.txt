    
	[XmlRoot(ElementName = "Package")]
    public class Package
    {
        public Package()
        {
            Contents = new List<File>();
        }

        public string Category { get; set; }
        public string Name { get; set; }
        public string Url { get; set; }
        public string Description { get; set; }
        public string Notes { get; set; }
        public string ForumUrl { get; set; }
        public string HomepageUrl { get; set; }
        public string Version { get; set; }
        public DateTime Created { get; set; }
        public string FileName { get; set; }

        [XmlArray(ElementName = "Contents")]
        [XmlArrayItem("File")]
        public List<File> Contents { get; set; }
    }
	
	[XmlRoot(ElementName = "Category")]
    public class Category
    {
        public string Name { get; set; }   
        public string Url { get; set; }   
        public string Description { get; set; }   
        public string Image { get; set; }   
    }	
	
	
	------------------------------------
	
	public class XmlExport<T> where T : class
    {
        private string _savePath;
        private Func<T, string> _fileName;

        public XmlExport<T> ExportTo(string path)
        {
            _savePath = path;
            return this;
        }
        
        public XmlExport<T> WithName(Func<T, string> name)
        {
            _fileName = name;
            return this;
        }

        public void Export(T item)
        {
            var serializer = new XmlSerializer(typeof(T));
            TextWriter textWriter = new StreamWriter(_savePath + _fileName.Invoke(item));
            serializer.Serialize(textWriter, item);
            textWriter.Close();
        }
    }
	
	------------------------------------
	usage;
	------------------------------------
	
	_packages.ForEach
	(
		package => new XmlExport<Package>()
					.ExportTo(SavePath(xxxx))
					.WithName(x => "filename.xml')
					.Export(package)
	);
	
	------------------------------------
